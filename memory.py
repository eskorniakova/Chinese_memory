#Basic Memory Game
#All images should be in folder named "Images"
#Images used are W:100px H:150px, though any size works if all images same size
#Line 32 has some commented out code to print the key to terminal for testing.

#*these are comments are for total newbies like me who are trying to figure out coding on their own :P

import wx, os, random, time
#these are the libraries:
#python wx = cross-platform GUI toolkit (main library)
#os muodule = operating system-(software that supoorts a computer's basic functions)--allows to interact with underslying os and find info about location and process
#random = allow generate random numbers
#time = allow to control time in program

class MemoryGame(wx.Frame):
    def __init__(self):
        wx.Frame.__init__(self, None, title='Memory')
        self.SetSize((900,700))
        self.Move((50,25))
        self.panel = wx.Panel(self)

#class = used to keep related things together
#class + _init_() function = used to assign values to object properties
#Frame =  a window whose size and position can be changed; can add a menu bar, a toolbar, and statusbar
#self = a class variable
#class variable = a variable shared with all objects created in that class-- defined outside of methods
#instance variable = pertains to a particlular object -- defined inside of method(init)
#self.SetSize = sets the size of the Frame
#self.Move = ??? moves the window to a given position on the screen???
#panel = window where controls are placed
#self.panel

        #define how big game is...can be useful for making skill options later
        self.numPairs = 4


        #get all images in directory called "Images" & shuffle order
        self.imageArray1 = GetJpgList("./Definitions")
        self.imageArray2 = GetJpgList("./Characters")

        #self.imageArray = GetJpgList("./Images")


        random.shuffle(self.imageArray1)
        random.shuffle(self.imageArray2)


#&&&I need to create matching pairs somehow...
        #create array with how many cards needed and double it to make matched pairs
        self.imagePairs1 = self.imageArray1[0:self.numPairs]
        self.imagePairs2 = self.imageArray2[0:self.numPairs]




        # self.imagePairs = self.imagePairs * 2

        #because we doubled, we need to re-shuffle order
        random.shuffle(self.imagePairs1)
        random.shuffle(self.imagePairs2)

        #PRINT KEY TO TERMINAL SO YOU CAN QUICKLY SOLVE
#         countrow=0
#         for card in self.imagePairs:
#             countrow +=1
#             if countrow%6 == 0:
#                 print card
#             else:
#                 print card,

        #create blank card and give name of file name
        #create your deck of cards?
        card = wx.Image('card.jpg',wx.BITMAP_TYPE_ANY).ConvertToBitmap()
        self.blankCards =[]
        for i in range(len(self.imagePairs1)):
            self.blankCards.append(wx.StaticBitmap(self.panel,wx.ID_ANY, card,name=self.imagePairs1[i]))
        for i in range(len(self.imagePairs2)):
            self.blankCards.append(wx.StaticBitmap(self.panel,wx.ID_ANY, card,name=self.imagePairs2[i]))


#bitmap = help display image
#wx.StaticBitmap = displays a bitmap
#wxID_ANY = when creating a new window you may specify to let wxWidgets assign an unused identifier to it automatically


        #bind left click to each card that calls check function
        for img in self.blankCards:
            img.Bind(wx.EVT_LEFT_DOWN, self.onClick)


        #Visual Layout
        hbox = wx.BoxSizer(wx.HORIZONTAL)
        gs = wx.GridSizer(4, 6, 15, 15)
        gs.AddMany(self.blankCards)
        hbox.Add(gs, proportion=0, flag = wx.LEFT | wx.TOP, border = 10)

        title = wx.StaticText(self.panel, label="Memory Game")
        hbox.Add(title,proportion=1, flag = wx.LEFT | wx.TOP | wx.RIGHT | wx.EXPAND, border = 10)

        self.panel.SetSizer(hbox)
        self.Show()

        self.foundMatches= 0 #Keeps track to see if you've won.
        self.clickCount = 0 #keeps track of 1st or second click.
        self.card1 = '' #holding spot if it's first click
        self.totalTries = 0

    #----------------------------------------------------------------------
    def onClick(self, event):
        self.clickCount += 1
        #track the clicks, 1st vs 2nd

        #get card clicked on, swap out blank image with image by filename
        newCard = event.GetEventObject()
        img = wx.Image(newCard.GetName(), wx.BITMAP_TYPE_ANY)
        newCard.SetBitmap(wx.BitmapFromImage(img))

#event-based program = relies on the events generated by the user:
    #event-type = clicking a button, klicking a key, etcself.
    #event-class = info associated with the event


        if self.clickCount == 1:
            self.card1 = newCard #put into holding space if 1st click
            self.card1.Unbind(wx.EVT_LEFT_DOWN)
#wx.EVT_LEFT_DOWN) = a Mouse event (wx.MouseEvent)-- a left click
#newCard = binded to click function
#.Unbind = unbind from click function/// click button then track the next click of the mouse

        else:
            #FOUND MATCH: Unbind click events. Update match tracker
            self.totalTries += 1 #adds to num of Tries
            if (newCard.GetName() == self.card1.GetName()):
                for findItem in self.blankCards:
                    if findItem.GetName() == newCard.GetName():
                        findItem.Unbind(wx.EVT_LEFT_DOWN)

                self.foundMatches += 1
                print(self.foundMatches)
                #shows the amount of matches found
            else:
                #NO MATCH: Wait then hide both cards again.
                time.sleep(1) #This basically freezes screen, but clicks still captured.
                blankCard = wx.Image('card.jpg', wx.BITMAP_TYPE_ANY)
                newCard.SetBitmap(wx.BitmapFromImage(blankCard)) #set it back to blank
                self.card1.SetBitmap(wx.BitmapFromImage(blankCard))
                self.card1.Bind(wx.EVT_LEFT_DOWN, self.onClick) #rebind the click function
            self.clickCount = 0

        if self.foundMatches == self.numPairs:
            Winner()
            print("Total Tries = " + str(self.totalTries))


#NOTE: Make the winning more exciting. Hahahaha
def Winner():
    print "WINNER WINNER WINNER!"


#get all JPEGs in a directory that is passed and return image names array
#Note I found this code snippet here:   http://wiki.wxpython.org/wxStaticBitmap
def GetJpgList(loc):
    jpgs = [f for f in os.listdir(loc) if f[-4:] == ".jpg"]
    #print "JPGS are:", jpgs
    return [os.path.join(loc, f) for f in jpgs]


if __name__ == '__main__':
    app = wx.App(False)
    frame = MemoryGame()
    app.MainLoop()
